{"version":3,"sources":["components/List.tsx","App.tsx","index.tsx"],"names":["List","goodsList","useState","isReverse","setIsReverse","sortBy","setSortBy","wordLength","setWordLength","newGoodsList","filter","word","length","sort","elem1","elem2","localeCompare","reverse","className","type","onClick","onChange","event","Number","target","value","map","item","goodsFromServer","App","isVisible","setIsVisible","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAAwB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtC,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACMC,EAAeR,EAAUS,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAE7D,OAAQF,GACN,IAAK,WACHI,EAAaI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,IAAK,SACHN,EAAaI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMF,OAASG,EAAMH,UAU7D,OAJIT,GACFM,EAAaQ,UAIb,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAS,wBAAmBf,GAAa,yBACzCiB,QAAS,kBAAMhB,GAAcD,IAH/B,qBAQA,wBACEgB,KAAK,SACLD,UAAS,wBAA8B,aAAXb,GAAyB,yBACrDe,QAAS,WAGPd,EAF6B,KAAXD,EAAgB,WAAa,KAJnD,iCAYA,wBACEc,KAAK,SACLD,UAAS,wBAA8B,WAAXb,GAAuB,yBACnDe,QAAS,WAGPd,EAF6B,KAAXD,EAAgB,SAAW,KAJjD,4BAYA,yBACEa,UAAS,wBAAkC,IAAfX,GAAoB,yBAChDc,SAAU,SAAAC,GAAK,OAAId,EAAce,OAAOD,EAAME,OAAOC,SACrDA,MAAOlB,EAHT,UAKE,wBAAQkB,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,IAAd,SAAmB,qBACnB,wBAAQA,MAAM,KAAd,SAAoB,yBAGtB,wBACEN,KAAK,SACLD,UAAU,gBACVE,QAAS,WACPhB,GAAa,GACbE,EAAU,IACVE,EAAc,IANlB,sBAaF,oBAAIU,UAAU,cAAd,SAEIT,EAAaiB,KAAI,SAACC,GAAD,OACf,oBAAeT,UAAU,cAAzB,SACGS,GADMA,YC3FfC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BaC,EAxBO,WACpB,MAAkC3B,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,mBAECY,GAAa,cAAC,EAAD,CAAM7B,UAAW2B,KAG5BE,GACC,wBACEX,KAAK,SACLC,QAAS,kBAAMW,GAAa,IAC5Bb,UAAU,cAHZ,uBCzBVc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.017ac50a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  goodsList: string[];\n};\n\nexport const List: React.FC<Props> = ({ goodsList }) => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [wordLength, setWordLength] = useState(1);\n  const newGoodsList = goodsList.filter(word => word.length >= wordLength);\n\n  switch (sortBy) {\n    case 'alphabet':\n      newGoodsList.sort((elem1, elem2) => elem1.localeCompare(elem2));\n      break;\n    case 'length':\n      newGoodsList.sort((elem1, elem2) => elem1.length - elem2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReverse) {\n    newGoodsList.reverse();\n  }\n\n  return (\n    <div className=\"goods\">\n      <div className=\"goods__buttons\">\n        <button\n          type=\"button\"\n          className={`goods__button ${isReverse && 'goods__button--active'}`}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={`goods__button ${sortBy === 'alphabet' && 'goods__button--active'}`}\n          onClick={() => {\n            const condition = sortBy === '' ? 'alphabet' : '';\n\n            setSortBy(condition);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`goods__button ${sortBy === 'length' && 'goods__button--active'}`}\n          onClick={() => {\n            const condition = sortBy === '' ? 'length' : '';\n\n            setSortBy(condition);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <select\n          className={`goods__button ${wordLength !== 1 && 'goods__button--active'}`}\n          onChange={event => setWordLength(Number(event.target.value))}\n          value={wordLength}\n        >\n          <option value=\"1\">{'Word length >= 1'}</option>\n          <option value=\"2\">{'Word length >= 2'}</option>\n          <option value=\"3\">{'Word length >= 3'}</option>\n          <option value=\"4\">{'Word length >= 4'}</option>\n          <option value=\"5\">{'Word length >= 5'}</option>\n          <option value=\"6\">{'Word length >= 6'}</option>\n          <option value=\"7\">{'Word length >= 7'}</option>\n          <option value=\"8\">{'Word length >= 8'}</option>\n          <option value=\"9\">{'Word length >= 9'}</option>\n          <option value=\"10\">{'Word length >= 10'}</option>\n        </select>\n\n        <button\n          type=\"button\"\n          className=\"goods__button\"\n          onClick={() => {\n            setIsReverse(false);\n            setSortBy('');\n            setWordLength(1);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul className=\"goods__list\">\n        {\n          newGoodsList.map((item) => (\n            <li key={item} className=\"goods__item\">\n              {item}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { List } from './components/List';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__header\">Goods</h1>\n\n      {isVisible && <List goodsList={goodsFromServer} />}\n\n      {\n        !isVisible && (\n          <button\n            type=\"button\"\n            onClick={() => setIsVisible(true)}\n            className=\"show-button\"\n          >\n            Start\n          </button>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}